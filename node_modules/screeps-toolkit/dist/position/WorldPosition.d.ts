/// <reference types="screeps" />
import { RoomName } from "./types";
import { SomeRoomPosition } from "./utils";
/** Uniform screep's world position with E0S0 as origin. */
export declare class WorldPosition {
    x: number;
    y: number;
    constructor(x: number, y: number);
    /**
     * Extract room name from this.
     * In sim, it will return E0S0.
     * @returns the room name
     */
    getRoomName(): RoomName;
    /**
     * Convert a {@link RoomPosition} to {@link WorldPosition}
     * @param at Object containing a position
     * @returns this
     */
    static fromRoom(at: SomeRoomPosition): WorldPosition;
    /**
     * Convert this to {@link RoomPosition}
     * @returns a RoomPosition representing same position
     */
    toRoom(): RoomPosition;
    getRangeTo(to: WorldPosition): number;
    inRangeTo(to: WorldPosition, range?: number): boolean;
    getDirectionTo(to: WorldPosition): 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8;
    toString(): string;
}
/**
 * Functional helper to compute a range between two {@link RoomPosition}.
 * Support multi-room thanks to {@link WorldPosition}
 * @param f initial position
 * @returns a function taking position and returning the distance to {@link f}
 */
export declare function rangeTo(f: SomeRoomPosition): (t: SomeRoomPosition) => number;
