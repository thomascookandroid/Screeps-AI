/// <reference types="screeps" />
import { Dict } from "../utils";
/** Third level keys of {@link BOOSTS} constant */
export type ActionConstant = "harvest" | "build" | "repair" | "dismantle" | "upgradeController" | "attack" | "rangedAttack" | "rangedMassAttack" | "heal" | "rangedHeal" | "capacity" | "fatigue" | "damage";
/** Map creep actions with requires bodypart type */
export declare const ACTION_BODYPART: Record<ActionConstant, BodyPartConstant>;
/** Map creep actions with power multiplier */
export declare const ACTION_RANGE: {
    attack: number;
    heal: number;
    harvest: number;
    dismantle: number;
    build: number;
    repair: number;
    upgradeController: number;
    rangedAttack: number;
    rangedMassAttack: number;
    rangedHeal: number;
};
/** Map creep actions with required range */
export declare const ACTION_RANGE_DICT: typeof ACTION_RANGE & Dict<ActionConstant, number>;
/** Map creep actions with power multiplier */
export declare const ACTION_POWER: {
    attack: 30;
    heal: 12;
    harvest: 2;
    dismantle: 50;
    build: 5;
    repair: 100;
    upgradeController: 1;
    rangedAttack: 10;
    rangedHeal: 4;
};
/** Map creep actions with power multiplier */
export declare const ACTION_POWER_DICT: typeof ACTION_POWER & Dict<ActionConstant, number>;
/** Power of RANGED_MASS_ATTACK, dependent on range */
export declare const RANGED_MASS_ATTACK_POWER: {
    1: number;
    2: number;
    3: number;
};
/** Creep fatigue removal multiplier. Each move part remove this amount of fatigue */
export declare const MOVE_FATIGUE_POWER = 2;
/** Creep fatigue generation multiplier. Each non-move part add this amount of fatigue depending on terrain */
export declare const TERRAIN_MOVE_FATIGUE: {
    road: number;
    plain: number;
    swamp: number;
};
/** Additional creep hits for each bodypart */
export declare const HITS_PER_PART = 100;
/** Additional power creep hits for each level */
export declare const POWER_CREEP_HITS_PER_LEVEL = 1000;
