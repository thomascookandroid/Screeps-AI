/// <reference types="screeps" />
import { RoomName } from "../position/types";
/**
 * Correctly typed `Game.rooms[name]`.
 * @param name target room name
 * @returns a room if visible
 */
export declare function getRoom(name: RoomName | string): Room | undefined;
/**
 * Find neighbor rooms without need for visibility.
 * @param origin starting room
 * @param dist optional: number of rooms from starting point
 * @param pred optional: condition for a room to be visited
 * @returns a set of neighbor room names excluding {@link origin}
 */
export declare function describeAdjacentRooms(origin: RoomName, dist?: number, pred?: (r: RoomName, dist: number, from: RoomName) => boolean): Set<RoomName>;
/**
 * Guess sources capacity based on room ownership.
 * @param room a room (maybe partial)
 * @returns a number of energy units
 */
export declare function getRoomSourcesCapacity(room: RoomOwnershipData): 4000 | 3000 | 1500;
interface RoomOwnershipData {
    controller?: {
        owner?: object;
        reservation?: object;
    };
}
export {};
