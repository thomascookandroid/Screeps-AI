/**
 * A type-safe way to define properties.
 * https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern
 * @param target Object on which to add or modify properties
 * @param mixin Object with additional properties
 * @example
 * class CreepMixin extends Creep {
 *   hasBodyparts(type: BodyPartConstant) {
 *     return this.body.some((b) => b.type == type)
 *   }
 * }
 * applyMixin(Creep, CreepMixin)
 */
export function applyMixin(target, mixin) {
    Object.getOwnPropertyNames(mixin.prototype).forEach((name) => {
        var _a;
        Object.defineProperty(target.prototype, name, (_a = Object.getOwnPropertyDescriptor(mixin.prototype, name)) !== null && _a !== void 0 ? _a : Object.create(null));
    });
}
//# sourceMappingURL=applyMixin.js.map